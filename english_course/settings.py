"""
Django settings for english_course project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from dotenv import load_dotenv
import dj_database_url
from pathlib import Path




# .env файлын жүктеу
BASE_DIR = Path(__file__).resolve().parent.parent

# .env файлын нақты жолымен жүктеу
load_dotenv(os.path.join(BASE_DIR, ".env"))

# OpenAI API кілтін алу
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# API кілттің дұрыс жүктелгенін тексеру
if not OPENAI_API_KEY:
    raise ValueError("OPENAI_API_KEY жүктелмеді! .env файлын тексеріңіз.")

print(f"✅ OpenAI API кілті сәтті жүктелді!")


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
ALLOWED_HOSTS = [
    "127.0.0.1",
    "localhost",
    "abdiraiymzhandos.pythonanywhere.com",
    "www.oqyai.kz",
    "oqyai.kz"
]

CSRF_TRUSTED_ORIGINS = [
    "https://abdiraiymzhandos.pythonanywhere.com",
    "http://127.0.0.1:8000",
    "http://localhost:8000",
    "https://www.oqyai.kz",
    "https://oqyai.kz"
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'channels',
    'lessons',
]

MIDDLEWARE = [
    'lessons.middleware.WwwRedirectMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'lessons.middleware.DeviceLockMiddleware',
]

ROOT_URLCONF = 'english_course.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'english_course.wsgi.application'
ASGI_APPLICATION = "english_course.asgi.application"

# Channel Layers for WebSockets
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }
}


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'abdiraiymzhandos$aienglish',  # өз база атыңды жаз
        'USER': 'abdiraiymzhandos',                 # өз юзер атың
        'PASSWORD': 'My2612SQL',          # жаңа MySQL паролі
        'HOST': 'abdiraiymzhandos.mysql.pythonanywhere-services.com',
        'PORT': '3306',
    }
}



# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,      # <-- осында жазасыз
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'

SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
X_FRAME_OPTIONS = 'DENY'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


# Статикалық файлдар

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

STATIC_URL = "/static/"

# collectstatic пәрмені арқылы жиналған файлдар сақталатын орын
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# Дамыту кезеңінде (development) қолданылатын static файлдар папкасы
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]


# Whitenoise конфигурациясы
STATICFILES_STORAGE = "whitenoise.storage.ManifestStaticFilesStorage"

# Медиа файлдар
MEDIA_URL = '/media/'
MEDIA_ROOT = "/home/abdiraiymzhandos/media/"


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Logging configuration for WebSocket debugging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'lessons.consumers': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}
